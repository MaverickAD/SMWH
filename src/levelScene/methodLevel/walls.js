const ww = window.innerWidth;
const wh = window.innerHeight;

export const walls = [
    [ww * (0.5/20), wh *  (10/12) , ww * (1/20)  + 10, 10 ],
    [ww * (1.5/20), wh *  (2/12) ,  ww * (1/20)  + 10, 10 ],
    [ww * (1.5/20), wh *  (3/12) ,  ww * (1/20)  + 10, 10 ],
    [ww * (1.5/20), wh *  (9/12) ,  ww * (1/20)  + 10, 10 ],
    [ww * (2/20),   wh *  (11/12) , ww * (2/20)  + 10, 10 ],
    [ww * (2/20),   wh *  (1/12) ,   10 , wh *  (2/12) ],
    [ww * (2/20),   wh *  (4/12) ,   10 , wh *  (2/12) ],
    [ww * (2/20),   wh *  (8.5/12) , 10 , wh *  (3/12) ],
    [ww * (2.5/20), wh *  (5/12) ,  ww * (1/20)  + 10, 10 ],
    [ww * (2.5/20), wh *  (7/12) ,  ww * (1/20)  + 10, 10 ],
    [ww * (2.5/20), wh *  (10/12) , ww * (1/20)  + 10, 10 ],
    [ww * (3/20),   wh *  (2.5/12) ,   10 , wh *  (1/12) ],
    [ww * (3/20),   wh *  (8/12) ,     10 , wh *  (2/12) ],
    [ww * (3/20),   wh *  (10.5/12) ,  10 , wh *  (1/12) ],
    [ww * (6/20),   wh *  (2/12) , ww * (6/20) + 10 , 10 ],
    [ww * (4/20),   wh *  (3/12) , ww * (2/20) + 10 , 10 ],
    [ww * (3.5/20), wh *  (4/12) , ww * (1/20) + 10, 10 ],
    [ww * (4/20),   wh *  (9/12) , ww * (2/20) + 10, 10 ],
    [ww * (5/20),   wh *  (1/12) , ww * (2/20) + 10, 10 ],
    [ww * (5.5/20), wh *  (6/12) , ww * (1/20) + 10, 10 ],
    [ww * (5/20),   wh *  (8/12) , ww * (2/20) + 10, 10 ],
    [ww * (4.5/20), wh *  (11/12) , ww * (1/20)  + 10, 10 ],
    [ww * (4/20),   wh *  (6.5/12) ,   10 , wh *  (5/12) ],
    [ww * (5/20),   wh *  (5/12) ,     10 , wh *  (2/12) ],
    [ww * (5/20),   wh *  (9.5/12) ,   10 , wh *  (1/12) ],
    [ww * (5/20),   wh *  (11.5/12) ,  10 , wh *  (1/12) ],
    [ww * (6/20),   wh *  (3/12) ,     10 , wh *  (2/12) ],
    [ww * (6/20),   wh *  (7.5/12) ,   10 , wh *  (3/12) ],
    [ww * (6/20),   wh *  (11/12) ,    10 , wh *  (2/12) ],
    [ww * (6.5/20), wh *  (5/12) , ww * (1/20)  + 10, 10 ],
    [ww * (6.5/20), wh *  (9/12) , ww * (1/20)  + 10, 10 ],
    [ww * (7/20),   wh *  (10/12) ,  ww * (2/20)  + 10, 10 ],
    [ww * (7/20),   wh *  (3.5/12) ,     10 , wh *  (1/12) ],
    [ww * (7/20),   wh *  (6/12) ,       10 , wh *  (2/12) ],
    [ww * (8/20),   wh *  (3/12) , ww * (2/20)  + 10, 10 ],
    [ww * (7.5/20), wh *  (4/12) , ww * (1/20)  + 10, 10 ],
    [ww * (7.5/20), wh *  (7/12) , ww * (1/20)  + 10, 10 ],
    [ww * (8/20),   wh *  (4.5/12) ,     10 , wh *  (1/12) ],
    [ww * (8/20),   wh *  (6.5/12) ,     10 , wh *  (1/12) ],
    [ww * (8/20),   wh *  (8.5/12) ,     10 , wh *  (1/12) ],
    [ww * (8.5/20), wh *  (5/12) , ww * (1/20)  + 10, 10 ],
    [ww * (8.5/20), wh *  (6/12) , ww * (1/20)  + 10, 10 ],
    [ww * (8.5/20), wh *  (8/12) , ww * (1/20)  + 10, 10 ],
    [ww * (9/20),   wh *  (9/12) , ww * (2/20)  + 10, 10 ],
    [ww * (9.5/20), wh *  (10/12) , ww * (1/20)  + 10, 10 ],
    [ww * (9/20),   wh *  (11/12) ,     10 , wh *  (2/12) ],
    [ww * (9/20),   wh *  (7/12) ,      10 , wh *  (2/12) ],
    [ww * (10/20),   wh *  (6.5/12) ,   10 , wh *  (5/12) ],
    [ww * (11.5/20), wh *  (2/12) , ww * (3/20)  + 10, 10 ],
    [ww * (10.5/20), wh *  (3/12) , ww * (1/20)  + 10, 10 ],
    [ww * (10.5/20), wh *  (4/12) , ww * (1/20)  + 10, 10 ],
    [ww * (12/20),   wh *  (8/12) , ww * (4/20)  + 10, 10 ],
    [ww * (11.5/20), wh *  (9/12) , ww * (1/20)  + 10, 10 ],
    [ww * (11/20),   wh *  (1.5/12) ,     10 , wh *  (1/12) ],
    [ww * (12/20),   wh *  (2.5/12) ,     10 , wh *  (1/12) ],
    [ww * (12/20),   wh *  (9.5/12) ,     10 , wh *  (1/12) ],
    [ww * (12/20),   wh *  (11.5/12) ,    10 , wh *  (1/12) ],
    [ww * (11/20),   wh *  (10/12) ,      10 , wh *  (2/12) ],
    [ww * (11/20),   wh *  (3.5/12) ,     10 , wh *  (1/12) ],
    [ww * (13/20),   wh *  (8.5/12) ,     10 , wh *  (1/12) ],
    [ww * (13/20),   wh *  (3/12) ,       10 , wh *  (2/12) ],
    [ww * (13/20),   wh *  (10.5/12) ,    10 , wh *  (1/12) ],
    [ww * (9/20),    wh *  (1/12) ,        10 , wh *  (2/12) ],
    [ww * (6/20),    wh *  (0.5/12) ,        10 , wh *  (1/12) ],
    [ww * (12/20),   wh *  (1/12) , ww * (2/20)  + 10, 10 ],
    [ww * (13/20),   wh *  (4/12) , ww * (2/20)  + 10, 10 ],
    [ww * (12.5/20), wh *  (10/12) ,  ww * (1/20)  + 10, 10 ],
    [ww * (14.5/20), wh *  (11/12) ,  ww * (3/20)  + 10, 10 ],
    [ww * (14/20),   wh *  (0.5/12) ,    10 , wh *  (1/12) ],
    [ww * (14/20),   wh *  (4/12) ,      10 , wh *  (2/12) ],
    [ww * (14/20),   wh *  (6.5/12) ,    10 , wh *  (1/12) ],
    [ww * (14/20),   wh *  (8.5/12) ,    10 , wh *  (1/12) ],
    [ww * (15/20),   wh *  (1/12) , ww * (2/20)  + 10, 10 ],
    [ww * (17.5/20), wh *  (1/12) , ww * (1/20)  + 10, 10 ],
    [ww * (15.5/20), wh *  (2/12) , ww * (3/20)  + 10, 10 ],
    [ww * (15.5/20), wh *  (3/12) , ww * (3/20)  + 10, 10 ],
    [ww * (15.5/20), wh *  (4/12) , ww * (1/20)  + 10, 10 ],
    [ww * (14.5/20), wh *  (5/12) , ww * (1/20)  + 10, 10 ],
    [ww * (14.5/20), wh *  (6/12) , ww * (1/20)  + 10, 10 ],
    [ww * (15/20),   wh *  (7/12) , ww * (2/20)  + 10, 10 ],
    [ww * (14.5/20), wh *  (9/12) , ww * (1/20)  + 10, 10 ],
    [ww * (15.5/20), wh *  (10/12) ,  ww * (3/20)  + 10, 10 ],
    [ww * (19.5/20), wh *  (2/12) , ww * (1/20)  + 10, 10 ],
    [ww * (18.5/20), wh *  (3/12) , ww * (1/20)  + 10, 10 ],
    [ww * (18/20),   wh *  (4/12) , ww * (2/20)  + 10, 10 ],
    [ww * (19/20),   wh *  (5/12) , ww * (2/20)  + 10, 10 ],
    [ww * (17.5/20), wh *  (6/12) , ww * (1/20)  + 10, 10 ],
    [ww * (18.5/20), wh *  (7/12) , ww * (1/20)  + 10, 10 ],
    [ww * (17.5/20), wh *  (8/12) , ww * (1/20)  + 10, 10 ],
    [ww * (19.5/20), wh *  (8/12) , ww * (1/20)  + 10, 10 ],
    [ww * (17.5/20), wh *  (9/12) , ww * (3/20)  + 10, 10 ],
    [ww * (18.5/20), wh *  (10/12) ,  ww * (1/20)  + 10, 10 ],
    [ww * (17.5/20), wh *  (11/12) ,  ww * (1/20)  + 10, 10 ],
    [ww * (15/20),   wh *  (9/12) ,      10 , wh *  (2/12) ],
    [ww * (16/20),   wh *  (4/12) ,      10 , wh *  (2/12) ],
    [ww * (16/20),   wh *  (8/12) ,      10 , wh *  (2/12) ],
    [ww * (17/20),   wh *  (1.5/12) ,    10 , wh *  (1/12) ],
    [ww * (17/20),   wh *  (6/12) ,      10 , wh *  (4/12) ],
    [ww * (17/20),   wh *  (10.5/12) ,   10 , wh *  (1/12) ],
    [ww * (18/20),   wh *  (2/12) ,      10 , wh *  (2/12) ],
    [ww * (18/20),   wh *  (7.5/12) ,    10 , wh *  (1/12) ],
    [ww * (18/20),   wh *  (10.5/12) ,   10 , wh *  (1/12) ],
    [ww * (19/20),   wh *  (1.5/12) ,    10 , wh *  (1/12) ],
    [ww * (19/20),   wh *  (3.5/12) ,    10 , wh *  (1/12) ],
    [ww * (19/20),   wh *  (7.5/12) ,    10 , wh *  (1/12) ],
    [ww * (19/20),   wh *  (10.5/12) ,   10 , wh *  (1/12) ],

    //bordures
    [ww * (10/20),   wh *  (0/12) ,    ww * (20/20) , 10 ],
    [ww * (10/20),   wh *  (12/12) ,    ww * (20/20) , 10 ],
    [ww * (0/20),   wh *  (6/12) ,    10 , wh *  (12/12) ],
    [ww * (20/20),   wh *  (6/12) ,    10 , wh *  (12/12) ],
];


export const decoration = [
    [ww*(3/20), wh*(1.5/20) - 9, 'trident', {'scale' : 1.3, 'rotation' : 0.8}],
    [ww*(7/20) + 10, wh*(8/12) - 8, 'lyre', {'scale' : 1.4, 'rotation' : 0.2}]
        [ww*(16/20) + 10, wh*(6/12) - 16,  'caducee', {'scale' : 1.1, 'rotation' : 0.5}],
    [ww*(10/20) + 10, wh*(11/12) - 8,  'marteau', {'rotation' : 0.8}],
    [ww*(9/20) + 10, wh*(4/12) - 8,  'rat', {'scale' : 0.7}],
    [ww*(4/20) + 10, wh*(10/12) - 8,  'rat', {'scale' : 0.7, 'rotation' : 'flip'}]
]